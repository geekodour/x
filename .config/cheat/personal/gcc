# output
$ gcc main.c -o main

# optimization
# Defaults to -O0 if not specified.
# Sets to -O1 if flag is -O1 or simply -O
# Other optimizations include -O2, -O3, -Os, -Ofast
$ gcc -O main.c -o main

# Define macro in the fly for the preprocessor
$ gcc -D DEBUG main.c -o main

# Generate debug info for GDB, Levels: -g0(negates debug info),-g1,-g, -g3
# The ELF object file is added with the .debug and .line section if -g flag is used.
$ gcc -g main.c -o main

# Generate preprocessed file
$ cpp main.c main.i

# Compile but do not Link. Just generate the object file.
# All three will generate the same main.o file.
$ gcc -c main.c
$ gcc -c main.c -o main.o
$ gcc -c main.i -o main.o

# The --help flags takes in several classes (see man gcc)
$ gcc --help=warnings # Shows warning descriptions
$ gcc -Q --help=warnings # Shows whether the option is set

# All warnings (Actually not all! see --help=warnings)
$ gcc -Wall main.c -o main

# -Wextra prints additional warnings, -Wextra was previously -W
$ gcc -Wall -Wextra main.c -o main

# Passing options to the linker, Wl looks like a Warning flag but is not!
$ gcc -Wl,-Map main.c # passes -Map to the linker(ld).

# Specify directory for Include files/Header files
$ gcc -Iproj/src main.c -o main # eg. proj/src/myheader.h
