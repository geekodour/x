#+TITLE: Fish config and notes
#+AUTHOR: Hrishikesh Barman
#+PROPERTY: header-args :tangle config.fish

#+begin_src fish
# DO NOT EDIT config.fish
# file tangled from config.org
# EDIT config.org and then tangle
#+end_src

* Things to fix
- [ ] Mix git aliases and fish git aliases
- [ ] Figure out a way to easily disable right-prompt for fish

* Security
** Keychain
See [[https://www.funtoo.org/Keychain][Funtoo Keychain Project - Funtoo]]
- Add a key: =set -Ua <SEC_PROTOCOL>_KEYS_TO_AUTOLOAD keypath=
  - Not exported, executed outside of =config.fish=
- You can edit =fish_variables= file to make changes to these variable.
- Usually there will be only one key per =SEC_PROTOCOL=, but if they have the same password, they can be included in the same variable via append.
- Since during login, =fish_variables= is loaded before =config.fish= is executed, =config.fish= will have access to variables defined in =fish_variables=.
- Change in exported universal variable is only possible if =set -Ux= is run before login shell is executed. It can be modified via =export= command for that specific shell but that's not specific to fish anyway. If you make a change with =set -Ux= changes to other programs to that environment variable will only show after boot.
#+begin_src fish
if status is-interactive
    keychain --eval --quiet --quick --nogui $SSH_KEYS_TO_AUTOLOAD | source # ssh
    keychain --eval --quiet --quick --nogui --agents gpg "$GPG_FP_TO_AUTOLOAD" | source # gpg
end
#+end_src
** GPG
#+begin_src fish
# see https://stackoverflow.com/questions/51504367/gpg-agent-forwarding-inappropriate-ioctl-for-device
set -x GPG_TTY $(tty)
#+end_src
** Age
- This is good for anonymous stuff, because gpg can have email linked. w age, i'll never know.
- I think on start it should ask me keys for all 3, age, gpg, ssh (if needed, we'll see.)
** Encrypting and Signing
This is very usecase specific.
- signify https://www.openbsd.org/papers/bsdcan-signify.html
- mkcert when?

* Integrations
** Sway
#+begin_src fish
if test (tty) = /dev/tty1
    sway
end
#+end_src

* Variables
- =set= and =env= are different. =env= is a coreutils program. while, =set= is a fish thing.
- With =set= you can define fish variables at different scopes and optionally export them as environment variables using the =-x= modifier.
** Types
Now all this info is available in =man fish= but sometimes the usecase is not apparent and I keep forgetting things.
*** Local
=-l= : Available only to the innermost block
*** Global
=-g= : Available outside blocks and by other functions
**** direnv
=direnev= is managed by =asdf=, so not try handling this manually too much
#+begin_src fish
set -g direnv_fish_mode eval_on_arrow # sourced direnv hook
#+end_src
*** Universal
#+begin_quote
*Updating universal variables*

If you're already logged in (post login-shell), and you add new env variables with =-Ux=. The variable will be available across fish shells because each will load it. But outside of fish shell it will only be available once it accesses a login shell(which is most of the time the next boot).
#+end_quote
- Set using =-U=
- Across sessions, across restarts of the shell
- Use this if you *don't want to* set your variables more than once. Example security keychains. You usually don't use it in =fish.config=, even if you do make sure to clear it with =-e= before just to make sure no scope is shadowing it.
- This sets things in =fish_variables= file. (It's not the best candidate for version control i'd say)
- Example
  - =fish_color_autosuggestion= is an universal var which is not exported
    #+begin_src shell :tangle no
  env | rg fish_color_autosuggestion # no output
  set | rg fish_color_autosuggestion
  fish_color_autosuggestion FFC473
    #+end_src
**** Issues
- =ASDF_DIRENV_BIN= is a =-gx=, I am not sure how it is universally available. Something else might be setting it?
**** XDG
XDG variables are things that might be used by things that are not running in the shell or its children. So they should be universal variables. If not found in =fish_variables=, set them one time using the CLI or something.
#+begin_src fish :tangle no
set -Ux XDG_DATA_HOME $HOME/.local/share
set -Ux XDG_CONFIG_HOME $HOME/.config
set -Ux XDG_STATE_HOME $HOME/.local/state
set -Ux XDG_CACHE_HOME $HOME/.cache
#+end_src

*** Exported
- This is not a variable type but a modifier.
- =-x= : Available to any child process spawned in the current session
- This is usually what you want to set, if you want to set an env var export inside =config.fish=
- =-gx= and =-x= does the same thing when you're trying to export something. I am not sure why anyone would need to use =-gx= unless like it's something very specific to the script.
- If you want to export variables that are available outside fish, use =-Ux=.
**** Misc
#+begin_src fish
set -x MANPAGER "sh -c 'col -bx | bat -l man -p'"
set -x DOOMDIR "~/.config/doom"
set -x EDITOR nvim

# NOTE: I am not sure if these are necessary when we use asdf
# NOTE: deal w npm beleg ke.
set -x CARGO_HOME $XDG_DATA_HOME/cargo
set -x GEM_HOME $XDG_DATA_HOME/gem
set -x GOPATH $XDG_DATA_HOME/go # what aboout someone saying no need to set gopath
set -x NIMBLE_DIR $XDG_DATA_HOME/nimble
set -x NODE_REPL_HISTORY $XDG_DATA_HOME/node_repl_history

set -x LESSHISTFILE $XDG_STATE_HOME/less/history
#+end_src
**** asdf
#+begin_src fish :tangle no
set -x ASDF_DATA_DIR $XDG_DATA_HOME/asdf
#+end_src
- remove these later
- remove asdf in the end because lot of deps are relying on those go and python versions
- direnv https://github.com/asdf-community/asdf-direnv.git
- golang https://github.com/kennyp/asdf-golang.git
- nodejs https://github.com/asdf-vm/asdf-nodejs.git
- poetry https://github.com/asdf-community/asdf-poetry.git
- python https://github.com/danhper/asdf-python.git
*** Other stuff
- =-e= : Erase variable at all scopes
- =-u= : Un-export variable. (Different from =U=!)


* Sourcing
#+begin_src fish
source ~/.config/nnn/init # nnn
source ~/.config/starship/init # starship
source /opt/asdf-vm/asdf.fish # asdf
source ~/.config/zoxide/init # zoxide
#+end_src

* Hacks
** npm
I am not sure why exactly I need this so disabling it for now.
#+begin_src fish :tangle no
set -x npm_config_prefix "~/.local"
#+end_src
** zoxide
- The norm in fish is to use =functions= as =aliases=
- But [[https://github.com/ajeetdsouza/zoxide/issues/145][zoxide suffers w some loading ordering issues]], so we need to define it here.
#+begin_src fish
alias cd z
#+end_src
* Resources
- [[https://github.com/jorgebucaran/cookbook.fish#how-do-i-set-variables-in-fish][jorgebucaran/cookbook.fish: Tips and recipes for Fish, from shell to plate. üç£]]
